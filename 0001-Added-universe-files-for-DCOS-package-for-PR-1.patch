From 7622ee84743dab37ef0e7564a7e6ed3f83c98a4f Mon Sep 17 00:00:00 2001
From: petter <petterhg@kth.se>
Date: Thu, 23 Nov 2017 10:21:06 +0100
Subject: [PATCH] Added universe files for DCOS package for PR 1

Signed-off-by: petter <petterhg@kth.se>

This commit, followed by previous ones creates a DC/OS package for Scylla. The package and all its dependencies can be found under /dist/dcos in the project hierarchy.
This package adds features to the original Docker image as well as lets user interactively set their ScyllaDB cluster by using the DC/OS install GUI.
Users can now freely create an arbitrary large cluster of nodes, with any level of security, utilizing most (relevant) features of Scylla via the scylla.yaml file etc.
In /containers, the modified Docker image is located with all auxiliary scripts.
In /universe, all config files exists that are necassary for the ScyllaDB DC/OS package.
Note that /universe will also be committed separately to the DC/OS universe package for it to be supplied to the community.
It is therefore necessary to first establish and agree upon what features this package should contain within the scylla community before I commit this to the DC/OS project.

By making a contribution to this project, I certify that:
The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or

The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or

The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it.

I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved.
---
 dist/dcos/universe/config.json            | 227 ++++++++++++++++++++++++++++++
 dist/dcos/universe/marathon.json.mustache | 174 +++++++++++++++++++++++
 dist/dcos/universe/package.json           |  12 ++
 dist/dcos/universe/resource.json          |  18 +++
 4 files changed, 431 insertions(+)
 create mode 100644 dist/dcos/universe/config.json
 create mode 100644 dist/dcos/universe/marathon.json.mustache
 create mode 100644 dist/dcos/universe/package.json
 create mode 100644 dist/dcos/universe/resource.json

diff --git a/dist/dcos/universe/config.json b/dist/dcos/universe/config.json
new file mode 100644
index 0000000..3d321a6
--- /dev/null
+++ b/dist/dcos/universe/config.json
@@ -0,0 +1,227 @@
+{
+  "type": "object",
+  "properties": {
+    "service": {
+      "type": "object",
+      "description": "DC/OS container service specifications",
+      "properties": {
+        "name": {
+          "description": "Name of scylla instances as seen in DC/OS.",
+          "type": "string",
+          "default": "scylla"
+        },
+        "nodes": {
+          "description": "How many nodes the cluster will have in total",
+          "type": "number",
+          "default": 3
+        },
+        "smp": {
+          "description": "Number of logical cores to allocate to each service instance.",
+          "type": "number",
+          "default": 3,
+          "minimum": 1
+        },
+        "mem": {
+          "description":  "Memory in Mb to allocate to each service instance. Should be at least 1000 Mb per logical core",
+          "type": "number",
+          "default": 12000,
+          "minimum": 4000
+        }
+     	},
+    	"required": [
+				"name",
+      	"nodes",
+      	"smp",
+				"mem"
+      ]
+    },
+    "general":{
+      "type": "object",
+      "description": "Define general scylla settings",
+      "properties": {
+        "cluster_name": {
+          "description": "Name of the cluster",
+          "type": "string",
+          "default": "charybdis"
+        },
+        "overprovisioned": {
+          "description": "Choose if you want to run in an overprovisioned environment. This is recommended for all nodes that share host resources with other applications.",
+          "type": "boolean",
+          "default": true
+        },
+        "developer_mode": {
+          "description": "Enable to skip some setup options. Not for production!",
+          "type": "boolean",
+          "default": false
+        },
+        "experimental": {
+          "description": "Run with experimental settings or not (not recommended for production).",
+          "type": "boolean",
+          "default": false
+        },
+        "endpoint_snitch": {
+          "description": "Set snitch strategy between nodes. [SimpleSnitch, GossipingPropertyFileSnitch, RackInferringSnitch]",
+          "type": "string",
+          "default": "GossipingPropertyFileSnitch"
+        },
+        "number_of_seeds": {
+          "description": "Set number of seeds to use in cluster. MUST be less than total number of instances",
+          "type": "number",
+          "default": 2,
+          "minimum": 1
+        },
+        "each_node_is_on_a_new_rack": {
+          "description": "If enabled, every node will have a new rack id. If not, they will all have the same",
+          "type": "boolean",
+          "default": true
+        },
+        "data_center_name": {
+          "description": "Give a name to your data center",
+          "type": "string",
+          "default": "dc1"
+        }, 
+        "batch_size_warning_threshold_in_kb": {
+          "description": "Set warning threshold for batch sizes larger than X kb",
+          "type": "number",
+          "default": 5
+        },
+        "batch_size_fail_threshold_in_kb": {
+          "description": "Set fail threshold for batch sizes larger than X kb",
+          "type": "number",
+          "default": 50
+        },
+        "partitioner": {
+          "description": "Set the partitoner used. [Murmur3Partitioner, RandomPartitioner, ByteOrderedPartitioner]",
+          "type": "string",
+          "default": "org.apache.cassandra.dht.Murmur3Partitioner"
+        }
+      },
+			"required": [
+				"cluster_name",
+				"endpoint_snitch",
+				"number_of_seeds",
+				"data_center_name",
+				"partitioner"
+			]
+    },
+    "disks":{
+      "type": "object",
+      "description": "Configure how to store data. If neither host disks or local persistence is chosen, no data is saved outside of the container. I.e. data loss is very possible. You can only choose one of the two.",
+      "properties": {
+        "use_host_disks": {
+          "description": "Use disks on host. Should be formatted as XFS and have the same path on all nodes",
+          "type": "boolean",
+          "default": true
+        },
+        "host_directory": {
+          "description": "Path on host to use for data and commitlog. Make sure scylla has read/write to dir. [/mnt/scylla/]",
+          "type": "string",
+          "default": "/mnt/scylla"
+        },
+        "use_dcos_local_persistence": {
+          "description": "See DC/OS documentation for more information",
+          "type": "boolean",
+          "default": false
+        },
+        "local_persistent_volume_size": {
+          "description": "Size of local volume in Mb",
+          "type": "number",
+          "default": 0
+        }
+      }
+    },
+    "network":{
+      "type": "object",
+      "description": "Network settings for scylla on DC/OS",
+      "properties": {
+        "cql_port": {
+          "description": "Port to used for cql communication",
+          "type": "number",
+          "default": 9042
+        },
+        "cql_vip_port": {
+          "description": "If set, other apps can use cql with scylla on instancename.marathon.l4lb.thisdcos.directory:PORT.",
+          "type": "number",
+          "default": 9042
+        },
+        "thrift_port": {
+          "description": "Port to be used for thrift communication",
+          "type": "number",
+          "default": 9160
+        },
+        "thrift_vip_port": {
+          "description": "If set, other apps can use thrift with scylla on instancename.marathon.l4lb.thisdcos.directory:PORT.",
+          "type": "number",
+          "default": 9160
+        },
+        "external_access_port": {
+          "description": "If set, applications outside the cluster can reach scylla on host-ip:PORT. Remember to open up firewall etc. Marathon-LB needs to be installed prior to setting this port.",
+          "type": "number"
+        }
+      },
+			"required": [
+				"cql_port"
+			]
+    },
+    "security":{
+      "type": "object",
+      "description": "Set security level of cluster",
+      "properties": {
+        "authenticator": {
+          "description": "Choose whether to allow all authenticators or use user+password authenticaton. If password authentication is chosen, the default user is cassandra with password cassandra. [AllowAllAuthenticator, PasswordAuthenticator]",
+          "type": "string",
+          "default": "AllowAllAuthenticator"
+        },
+        "client_encryption":{
+          "type": "object",
+          "description": "Use client SSL encryption or not. The certificate files must be available at the hosts before deployment in a directory or through download. OBS! Key files MUST be named scylladb.crt, scylladb.key",
+          "properties": {
+            "enable": {
+              "description": "If enabled you must provide certificate and key below",
+              "type": "boolean",
+              "default": false
+            },
+            "path": {
+              "description": "Absolute path to directory on host containing files: scylladb.crt, scylladb.key",
+              "type": "string"
+            }
+          }
+        },
+        "node_to_node_encryption":{
+          "type": "object",
+          "description": "Use SSL encryption between nodes or not. The certificate files must be available at the hosts before deployment in a directory or through download. OBS! Key files MUST be named scylladb.crt, scylladb.key, ca-scylladb.pem",
+          "properties": {
+            "enable": {
+              "description": "If enabled you must provide path to cert, key and truststore files below",
+              "type": "boolean",
+              "default": false
+            },
+            "level": {
+              "description": "Choose what traffic should be encrypted. [all, dc, rack]",
+              "type": "string"
+            },
+            "path": {
+              "description": "Absolute path to directory on host containing files: scylladb.crt, scylladb.key, ca-scylladb.pem",
+              "type": "string"
+            }
+          }
+        },
+        "download_my_keys": {
+          "type": "object",
+          "description": "Specify the path to an archive that contains your keys. The keys will end up in the mesos sandbox path on host. OBS! The certificates in the archive MUST have the following name: scylladb.crt, scylladb.key, ca-scylladb.pem",
+          "properties": {
+            "enable": {
+              "description": "If enabled. Mesos will download and extract the given archive before executing docker entrypoint",
+              "type": "boolean",
+              "default": false
+            },
+            "path": {
+              "description": "The uri to the files to download",
+              "type": "string"
+            }
+          }
+        }
+      }    
+    }
+  }
+}
diff --git a/dist/dcos/universe/marathon.json.mustache b/dist/dcos/universe/marathon.json.mustache
new file mode 100644
index 0000000..29dbde4
--- /dev/null
+++ b/dist/dcos/universe/marathon.json.mustache
@@ -0,0 +1,174 @@
+{
+  "id": "{{service.name}}",
+  "cpus": {{service.smp}},
+  "mem": {{service.mem}},
+  "instances": {{service.nodes}},
+	"constraints": [
+    [
+      "hostname",
+      "UNIQUE"
+    ]
+  ],
+  "container": {
+    "type": "DOCKER",
+    "volumes": [
+		{{#security.client_encryption.enable}}
+		{{^security.download_my_keys.enable}}
+			{
+        "containerPath": "/etc/scylla/keys/client",
+        "hostPath": "{{security.client_encryption.path}}",
+        "mode": "RO"	
+			},	
+		{{/security.download_my_keys.enable}}
+		{{/security.client_encryption.enable}}
+
+		{{#security.node_to_node_encryption.enable}}
+		{{^security.download_my_keys.enable}}
+			{
+        "containerPath": "/etc/scylla/keys/node",
+        "hostPath": "{{security.node_to_node_encryption.path}}",
+        "mode": "RO"	
+			}
+		{{#disks.use_host_disks}}
+		{{^disks.use_dcos_local_persistence}}
+		,
+		{{/disks.use_dcos_local_persistence}}
+		{{/disks.use_host_disks}}
+		{{#disks.use_dcos_local_persistence}}
+		{{^disks.use_host_disks}}
+		,
+		{{/disks.use_host_disks}}
+		{{/disks.use_dcos_local_persistence}}
+		{{/security.download_my_keys.enable}}
+		{{/security.node_to_node_encryption.enable}}
+
+    {{#disks.use_host_disks}}
+      {
+        "containerPath": "/var/lib/scylla",
+        "hostPath": "{{disks.host_directory}}",
+        "mode": "RW"
+      }
+		{{/disks.use_host_disks}}
+
+    {{#disks.use_dcos_local_persistence}}
+      {
+        "containerPath": "scylladata",
+        "mode": "RW",
+        "persistent": {
+          "size": {{disks.local_persistent_volume_size}}
+        }
+      },
+      {
+        "containerPath": "/var/lib/scylla",
+        "hostPath": "scylladata",
+        "mode": "RW"
+      }
+   	{{/disks.use_dcos_local_persistence}}	
+   	],
+    "docker": {
+      "image": "{{resource.assets.container.docker.scyllaimage}}",
+      "forcePullImage": true,
+      "network": "BRIDGE",
+      "portMappings": [
+        {
+          "containerPort": 10000,
+          "hostPort": 10000,
+          "protocol": "tcp"
+        },
+        {
+          "containerPort": 7000,
+          "hostPort": 7000,
+          "protocol": "tcp"
+        },
+				{{#security.node_to_node_encryption.enable}}
+				{
+					"containerPort": 7001,
+					"hostPort": 7001,
+					"protocol": "tcp"
+				},
+				{{/security.node_to_node_encryption.enable}}
+        {
+          "containerPort": 9180,
+          "hostPort": 9180,
+          "protocol": "tcp"
+        },
+        {
+          {{#network.cql_vip_port}}
+          "name": "cql",
+          "labels": {
+            "VIP_0": "/{{service.name}}:{{network.cql_vip_port}}"
+          },
+          {{/network.cql_vip_port}}
+          "containerPort": 9042,
+          "hostPort": {{network.cql_port}},
+          "protocol": "tcp"
+        },
+        {
+          {{#network.thrift_vip_port}}
+          "name": "thrift",
+          "labels": {
+            "VIP_1": "/{{service.name}}:{{network.thrift_vip_port}}"
+          },
+          {{/network.thrift_vip_port}}
+          "containerPort": 9160,
+          "hostPort": {{network.thrift_port}},
+          "protocol": "tcp"
+        }
+      ]
+    }
+  },
+	"requirePorts": true,
+  "upgradeStrategy":{
+    "minimumHealthCapacity": 0,
+    "maximumOverCapacity": 0
+  },
+  "healthChecks": [
+    {
+      "protocol": "TCP",
+      "portIndex": 4,
+      "gracePeriodSeconds": 900,
+      "intervalSeconds": 30,
+      "timeoutSeconds": 30,
+      "maxConsecutiveFailures": 1
+    }
+  ],
+  {{#security.download_my_keys.enable}}
+  "uris": [
+    "{{security.download_my_keys.path}}" 
+  ],
+  {{/security.download_my_keys.enable}}
+  "env": {
+    "SCYLLA_SMP": "{{service.smp}}",
+    "SCYLLA_MEM": "{{service.mem}}",
+		"SCYLLA_NODES": "{{service.nodes}}",
+    "SCYLLA_CLUSTER_NAME": "{{general.cluster_name}}",
+    "SCYLLA_OVERPROVISIONED": "{{general.overprovisioned}}",
+		"SCYLLA_DEVELOPER_MODE": "{{general.developer_mode}}",
+    "SCYLLA_EXPERIMENTAL": "{{general.experimental}}",
+    "SCYLLA_ENDPOINT_SNITCH": "{{general.endpoint_snitch}}",
+    "SCYLLA_SEEDS": "{{general.number_of_seeds}}",
+    "SCYLLA_NEW_RACK": "{{general.each_node_is_on_a_new_rack}}",
+    "SCYLLA_DATACENTER_NAME": "{{general.data_center_name}}",
+    "SCYLLA_BATCH_SIZE_WARN": "{{general.batch_size_warning_threshold_in_kb}}",
+    "SCYLLA_BATCH_SIZE_FAIL": "{{general.batch_size_fail_threshold_in_kb}}",
+		"SCYLLA_PARTITIONER": "{{general.partitioner}}",
+    "SCYLLA_AUTHENTICATOR": "{{security.authenticator}}",
+    "SCYLLA_USERNAME": "{{security.username}}",
+    "SCYLLA_PASSWORD": "{{security.password}}",
+		"SCYLLA_CQL_PORT": "{{network.cql_port}}",
+		"SCYLLA_THRIFT_PORT": "{{network.thrift_port}}",
+		"SCYLLA_CLIENT_SSL_ENABLE": "{{security.client_encryption.enable}}",
+    "SCYLLA_CLIENT_PATH": "{{security.client_encryption.path}}",
+		"SCYLLA_NODE_SSL_ENABLE": "{{security.node_to_node_encryption.enable}}",
+    "SCYLLA_NODE_LEVEL": "{{security.node_to_node_encryption.level}}",
+    "SCYLLA_NODE_PATH": "{{security.node_to_node_encryption.path}}",
+    "SCYLLA_DOWNLOAD_KEYS": "{{security.download_my_keys.enable}}",
+    "SCYLLA_DOWNLOAD_PATH": "{{security.download_my_keys.path}}"
+  },
+  "labels": {
+    {{#network.external_access_port}}
+    "HAPROXY_GROUP": "external",
+    {{/network.external_access_port}}
+    "DCOS_SCYLLA_VERSION": "{{resource.assets.container.docker.scyllaimage}}"
+  }
+}
diff --git a/dist/dcos/universe/package.json b/dist/dcos/universe/package.json
new file mode 100644
index 0000000..12dbdaf
--- /dev/null
+++ b/dist/dcos/universe/package.json
@@ -0,0 +1,12 @@
+{
+  "packagingVersion": "4.0",
+  "name": "scylladb",
+  "version": "1.1",
+  "maintainer": "petter.hultin@laketide.com",
+  "description": "Scylla DB",
+  "tags": ["scylladb", "database", "nosql"],
+  "minDcosReleaseVersion": "1.9.0",
+  "preInstallNotes": "This DC/OS package uses ScyllaDB version 2.0!",
+  "postInstallNotes": "ScyllaDB installed!",
+  "postUninstallNotes": "ScyllaDB uninstalled!"
+}
diff --git a/dist/dcos/universe/resource.json b/dist/dcos/universe/resource.json
new file mode 100644
index 0000000..5c11a67
--- /dev/null
+++ b/dist/dcos/universe/resource.json
@@ -0,0 +1,18 @@
+{
+	"images":{
+		"icon-small":"https://i.imgur.com/oehFsKh.png",
+		"icon-medium":"https://i.imgur.com/nHb8qmx.png",
+		"icon-large": "https://pbs.twimg.com/profile_images/786271812027944960/oJ22hqPY_400x400.jpg",
+		"screenshots": [
+			"http://www.scylladb.com/wp-content/uploads/image.png",
+			"https://abhishek-tiwari.com/assets/images/Scylla-vs-Cassandra-Throughput-v2-20150928073321.png"
+		]
+	},
+  "assets": {
+    "container": {
+      "docker": {
+        "scyllaimage": "docker.io/laketide/scylla-universe:2.0"
+      }
+    }
+  }
+}
-- 
2.9.5

